NAME
    Mandel - Simplistic Model Layer for Mango

SYNOPSIS
      package MyModel;
      use Mojo::Base 'Mandel';

DESCRIPTION
    Mandel is a simplistic model layer using the Mango module to interact
    with a MongoDB backend. This class defines the overall model, including
    high level interaction. Individual results, called Types inherit from
    Mandel::Document.

WARNING
    This code is at BEST alpha quality and anything can and will change or
    break. DO NOT USE IN PRODUCTION CODE!

EVENTS
    Mandel inherits all events from Mojo::EventEmitter and implements the
    following new ones.

    destroy
        Emitted when the object is destroyed (think "DESTROY").

ATTRIBUTES
    Mandel inherits all attributes from Mojo::EventEmitter and implements
    the following new ones.

    mango
        An instance of Mango which acts as the database connection. If not
        provided, one will be lazily created using the "uri" attribute.

    namespace
        The namespace which will be searched when looking for Types. By
        default, the (sub)class name of this module.

    uri The uri used by Mango to connect to the MongoDB server.

METHODS
    Mandel inherits all methods from Mojo::EventEmitter and implements the
    following new ones.

  Initialization Methods
    initialize
        No-op placeholder which is not called by default. This name is
        reserved for subclasses to define initialization functions (which it
        would have to call itself).

    initialize_types
        Takes a list of type names. Calls the "initialize" method of any
        type names passed in or if no names are passed then for all found
        types.

  Type and Type Class Helper Methods
    all_types
        Returns a list of all the types in the "namespace".

    class_for
        Given a type name, find the related class name, ensure that it is
        loaded (or else die) and return it.

    create
         my $item = $model->create('Type');
         my $item = $model->create('Type', \%mongodb_doc);

        Create an unpopulated instance of a given type. The primary reason
        to use this over the normal constructor is for class name resolution
        and proper handling of certain type attributes.

        It is also possible to pass on a %mongodb_doc which will populate
        all the fields defined in the "Type".

  Database Interaction
    find_one
        Takes a type name and a query document. Given that query it performs
        a "find_one" and constructs an instance of that type from the
        result. If no result is found then it returns a false value.

    count
        Returns the count of documents in the collection associated with a
        given type name.

    drop_database
        Drops the database that your Mango instance points to. Obviously
        this method should be used with care.

SEE ALSO
    Mojolicious, Mango

SOURCE REPOSITORY
    <http://github.com/jhthorsen/mandel>

AUTHOR
    Jan Henning Thorsen - "jhthorsen@cpan.org"

    This project is a fork of MangoModel
    <http://github.com/jberger/MangoModel>, created by Joel Berger,
    <joel.a.berger@gmail.com>

COPYRIGHT AND LICENSE
    Copyright (C) 2013 by Jan Henning Thorsen

    This library is free software; you can redistribute it and/or modify it
    under the same terms as Perl itself.

